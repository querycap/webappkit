{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://json-schema.org/draft/2019-09/schema",
  "$vocabulary": {
    "https://json-schema.org/draft/2019-09/vocab/core": true,
    "https://json-schema.org/draft/2019-09/vocab/applicator": true,
    "https://json-schema.org/draft/2019-09/vocab/validation": true,
    "https://json-schema.org/draft/2019-09/vocab/meta-data": true,
    "https://json-schema.org/draft/2019-09/vocab/format": false,
    "https://json-schema.org/draft/2019-09/vocab/content": true
  },
  "$recursiveAnchor": true,
  "title": "Core and Validation specifications meta-schema",
  "$defs": {
    "schemaArray": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$recursiveRef": "#"
      }
    },
    "nonNegativeInteger": {
      "type": "integer",
      "minimum": 0
    },
    "nonNegativeIntegerDefault0": {
      "$ref": "#/$defs/nonNegativeInteger",
      "default": 0
    },
    "simpleTypes": {
      "enum": ["boolean", "integer", "array", "null", "number", "object", "string"]
    },
    "stringArray": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": []
    },
    "core": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/core",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/core": true
      },
      "$recursiveAnchor": true,
      "title": "Core vocabulary meta-schema",
      "type": "object",
      "properties": {
        "$id": {
          "type": "string",
          "format": "uri-reference",
          "$comment": "Non-empty fragments not allowed.",
          "pattern": "^[^#]#?$"
        },
        "$schema": {
          "type": "string",
          "format": "uri"
        },
        "$anchor": {
          "type": "string",
          "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"
        },
        "$ref": {
          "type": "string",
          "format": "uri-reference"
        },
        "$recursiveRef": {
          "type": "string",
          "format": "uri-reference"
        },
        "$recursiveAnchor": {
          "type": "boolean",
          "const": true,
          "default": false
        },
        "$vocabulary": {
          "type": "object",
          "propertyNames": {
            "type": "string",
            "format": "uri"
          },
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "$comment": {
          "type": "string"
        },
        "$defs": {
          "type": "object",
          "additionalProperties": {
            "$recursiveRef": "#"
          },
          "default": {}
        }
      }
    },
    "applicator": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/applicator",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/applicator": true
      },
      "$recursiveAnchor": true,
      "title": "Applicator vocabulary meta-schema",
      "properties": {
        "additionalItems": {
          "$recursiveRef": "#"
        },
        "unevaluatedItems": {
          "$recursiveRef": "#"
        },
        "items": {
          "anyOf": [
            {
              "$recursiveRef": "#"
            },
            {
              "$ref": "#/$defs/schemaArray"
            }
          ]
        },
        "contains": {
          "$recursiveRef": "#"
        },
        "additionalProperties": {
          "$recursiveRef": "#"
        },
        "unevaluatedProperties": {
          "type": "object",
          "additionalProperties": {
            "$recursiveRef": "#"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$recursiveRef": "#"
          },
          "default": {}
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {
            "$recursiveRef": "#"
          },
          "propertyNames": {
            "format": "regex"
          },
          "default": {}
        },
        "dependentSchemas": {
          "type": "object",
          "additionalProperties": {
            "$recursiveRef": "#"
          }
        },
        "propertyNames": {
          "$recursiveRef": "#"
        },
        "if": {
          "$recursiveRef": "#"
        },
        "then": {
          "$recursiveRef": "#"
        },
        "else": {
          "$recursiveRef": "#"
        },
        "allOf": {
          "$ref": "#/$defs/schemaArray"
        },
        "anyOf": {
          "$ref": "#/$defs/schemaArray"
        },
        "oneOf": {
          "$ref": "#/$defs/schemaArray"
        },
        "not": {
          "$recursiveRef": "#"
        }
      }
    },
    "validation": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/validation",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/validation": true
      },
      "$recursiveAnchor": true,
      "title": "Validation vocabulary meta-schema",
      "type": "object",
      "properties": {
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "maxLength": {
          "$ref": "#/$defs/nonNegativeInteger"
        },
        "minLength": {
          "$ref": "#/$defs/nonNegativeIntegerDefault0"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "maxItems": {
          "$ref": "#/$defs/nonNegativeInteger"
        },
        "minItems": {
          "$ref": "#/$defs/nonNegativeIntegerDefault0"
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "maxContains": {
          "$ref": "#/$defs/nonNegativeInteger"
        },
        "minContains": {
          "$ref": "#/$defs/nonNegativeInteger",
          "default": 1
        },
        "maxProperties": {
          "$ref": "#/$defs/nonNegativeInteger"
        },
        "minProperties": {
          "$ref": "#/$defs/nonNegativeIntegerDefault0"
        },
        "required": {
          "$ref": "#/$defs/stringArray"
        },
        "dependentRequired": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/stringArray"
          }
        },
        "const": true,
        "enum": {
          "type": "array",
          "items": true
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/simpleTypes"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/simpleTypes"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        }
      }
    },
    "meta-data": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/meta-data",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/meta-data": true
      },
      "$recursiveAnchor": true,
      "title": "Meta-data vocabulary meta-schema",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": true,
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "examples": {
          "type": "array",
          "items": true
        }
      }
    },
    "format": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/format",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/format": true
      },
      "$recursiveAnchor": true,
      "title": "Format vocabulary meta-schema",
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        }
      }
    },
    "content": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "$id": "https://json-schema.org/draft/2019-09/meta/content",
      "$vocabulary": {
        "https://json-schema.org/draft/2019-09/vocab/content": true
      },
      "$recursiveAnchor": true,
      "title": "Content vocabulary meta-schema",
      "type": "object",
      "properties": {
        "contentMediaType": {
          "type": "string"
        },
        "contentEncoding": {
          "type": "string"
        },
        "contentSchema": {
          "$recursiveRef": "#"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/core"
    },
    {
      "$ref": "#/$defs/applicator"
    },
    {
      "$ref": "#/$defs/validation"
    },
    {
      "$ref": "#/$defs/meta-data"
    },
    {
      "$ref": "#/$defs/format"
    },
    {
      "$ref": "#/$defs/content"
    }
  ],
  "type": ["object", "boolean"]
}
