// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@querycap-ui/core/macro builder only 1`] = `
"

import { select, theme } from \\"@querycap-ui/core/macro\\";
    
export const headings = {
  h1: select()
    .marginTop(roundedEm(0.4))
    .marginBottom(1)
    .fontSize(12)
    .fontWeight(theme.fontWeights.bold),
};

    
 ↓ ↓ ↓ ↓ ↓ ↓

import { theme as _theme } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
var __macro_generated_ref_0 = {
  name: \\"6xa9h0\\",
  styles: \\"margin-bottom:1px;font-size:12px;\\"
};

var __macro_generated_ref_1 = roundedEm =>
/*__THEME_NEED__*/
__macro_generated_t => [__macro_generated_ref_0, {
  marginTop: _fromTheme(roundedEm(0.4))(__macro_generated_t),
  fontWeight: _fromTheme(_theme.fontWeights.bold)(__macro_generated_t)
}];

export const headings = {
  h1:
  /*__THEME_NEED__*/
  __macro_generated_ref_1(roundedEm)
};  
  "
`;

exports[`@querycap-ui/core/macro complex 1`] = `
"

import {
  colors,
  rgba,
  roundedEm,
  safeTextColor,
  select,
  simpleShadow,
  theme,
  tint,
  tintOrShade,
  transparentize,
} from \\"@querycap-ui/core/macro\\";
import { flow } from \\"lodash\\";
import { base } from \\"./util\\";

const createBtnStyle = ({block, invisible, small}) =>
  select()
    .with(base)
    .position(\\"relative\\")
    .paddingX(block ? 0 : small ? \\"1.2em\\" : \\"1.6em\\")
    .paddingY(flow(theme.state.fontSize, roundedEm(small ? 0.25 : 0.5)))
    .display(block ? \\"block\\" : \\"inline-block\\")
    .alignItems(\\"center\\")
    .outline(\\"none\\")
    .backgroundColor(theme.state.backgroundColor)
    .borderColor(theme.state.borderColor)
    .colorFill(theme.state.color)
    .with(block && select().width(\\"100%\\").justifyContent(\\"center\\"))
    .with(invisible && select().borderColor(\\"transparent\\"))
    .with(select(\\"&:hover\\").opacity(0.9).cursor(\\"pointer\\"))
    .with(select(\\"& > * + *\\").marginLeft(roundedEm(0.1)))
    .with(invisible ? undefined : select(\\"&:active\\").boxShadow(\`inset 0 0.15em 0.3em \${rgba(colors.black, 0.15)}\`))
    .with(
      invisible
        ? undefined
        : select(\\"&:focus\\")
          .outline(0)
          .zIndex(1)
          .boxShadow(flow(theme.state.borderColor, transparentize(0.85), simpleShadow(\\"0 0 0 0.2em\\"))),
    )
    .with(select(\\"&:disabled\\").opacity(0.6).cursor(\\"default\\"));

    
 ↓ ↓ ↓ ↓ ↓ ↓

import { transparentize as _transparentize } from \\"@querycap-ui/core\\";
import { theme as _theme } from \\"@querycap-ui/core\\";
import { simpleShadow as _simpleShadow } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
import { selectKeys as _selectKeys } from \\"@querycap-ui/core\\";
import { roundedEm as _roundedEm } from \\"@querycap-ui/core\\";
import { rgba as _rgba } from \\"@querycap-ui/core\\";
import { colors as _colors } from \\"@querycap-ui/core\\";
import { flow } from \\"lodash\\";
import { base } from \\"./util\\";
var __macro_generated_ref_0 = {
  name: \\"1w92t4z\\",
  styles: \\"opacity:0.6;cursor:default;\\"
};
var __macro_generated_ref_1 = {
  [_selectKeys(\\"&:disabled\\")]: __macro_generated_ref_0
};
var __macro_generated_ref_2 = {
  name: \\"1pqorvt\\",
  styles: \\"outline:0;z-index:1;\\"
};

var __macro_generated_ref_3 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  [_selectKeys(\\"&:focus\\")]: [__macro_generated_ref_2, {
    boxShadow: _fromTheme(flow(_theme.state.borderColor, _transparentize(0.85), _simpleShadow(\\"0 0 0 0.2em\\")))(__macro_generated_t)
  }]
});

var __macro_generated_ref_4 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  [_selectKeys(\\"&:active\\")]: {
    boxShadow: _fromTheme(\`inset 0 0.15em 0.3em \${_rgba(_colors.black, 0.15)}\`)(__macro_generated_t)
  }
});

var __macro_generated_ref_5 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  [_selectKeys(\\"& > * + *\\")]: {
    marginLeft: _fromTheme(_roundedEm(0.1))(__macro_generated_t)
  }
});

var __macro_generated_ref_6 = {
  name: \\"1s1p9w1\\",
  styles: \\"opacity:0.9;cursor:pointer;\\"
};
var __macro_generated_ref_7 = {
  [_selectKeys(\\"&:hover\\")]: __macro_generated_ref_6
};
var __macro_generated_ref_8 = {
  name: \\"roftna\\",
  styles: \\"border-color:transparent;\\"
};
var __macro_generated_ref_9 = {
  name: \\"199w7gr\\",
  styles: \\"width:100%;justify-content:center;\\"
};
var __macro_generated_ref_10 = {
  name: \\"v0rj7v\\",
  styles: \\"position:relative;align-items:center;outline:none;\\"
};

var __macro_generated_ref_11 = (block, small, invisible) =>
/*__THEME_NEED__*/
__macro_generated_t => [_fromTheme(base)(__macro_generated_t), __macro_generated_ref_10, {
  paddingLeft: _fromTheme(block ? 0 : small ? \\"1.2em\\" : \\"1.6em\\")(__macro_generated_t),
  paddingRight: _fromTheme(block ? 0 : small ? \\"1.2em\\" : \\"1.6em\\")(__macro_generated_t),
  paddingTop: _fromTheme(flow(_theme.state.fontSize, _roundedEm(small ? 0.25 : 0.5)))(__macro_generated_t),
  paddingBottom: _fromTheme(flow(_theme.state.fontSize, _roundedEm(small ? 0.25 : 0.5)))(__macro_generated_t),
  display: _fromTheme(block ? \\"block\\" : \\"inline-block\\")(__macro_generated_t),
  backgroundColor: _fromTheme(_theme.state.backgroundColor)(__macro_generated_t),
  borderColor: _fromTheme(_theme.state.borderColor)(__macro_generated_t),
  color: _fromTheme(_theme.state.color)(__macro_generated_t),
  fill: _fromTheme(_theme.state.color)(__macro_generated_t)
}, block && __macro_generated_ref_9, invisible && __macro_generated_ref_8, _fromTheme(__macro_generated_ref_7)(__macro_generated_t), _fromTheme(
/*__THEME_NEED__*/
__macro_generated_ref_5)(__macro_generated_t), _fromTheme(
/*__THEME_NEED__*/
invisible ? undefined :
/*__THEME_NEED__*/
__macro_generated_ref_4)(__macro_generated_t), _fromTheme(
/*__THEME_NEED__*/
invisible ? undefined :
/*__THEME_NEED__*/
__macro_generated_ref_3)(__macro_generated_t), _fromTheme(__macro_generated_ref_1)(__macro_generated_t)];

const createBtnStyle =
/*__THEME_NEED__*/
({
  block,
  invisible,
  small
}) =>
/*__THEME_NEED__*/
__macro_generated_ref_11(block, small, invisible);  
  "
`;

exports[`@querycap-ui/core/macro flow 1`] = `
"

import { flow } from \\"lodash\\"
import { select, theme } from \\"@querycap-ui/core/macro\\"

const C = () => {
  const v = \\"red\\"

  return (
    <>
      <div css={select().border(flow(theme.state.borderColor, (color) => \`2px solid \${color}\`))}>
      </div>
      
      <div css={select().border(flow(theme.state.borderColor, (color) => \`2px solid \${color + v}\`))}>
      </div>
    </>
  )
}

    
 ↓ ↓ ↓ ↓ ↓ ↓

import { theme as _theme } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
import { flow } from \\"lodash\\";

var __macro_generated_ref_0 = v =>
/*__THEME_NEED__*/
__macro_generated_t => ({
  border: _fromTheme(flow(_theme.state.borderColor, color => \`2px solid \${color + v}\`))(__macro_generated_t)
});

var __macro_generated_ref_1 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  border: _fromTheme(flow(_theme.state.borderColor, color => \`2px solid \${color}\`))(__macro_generated_t)
});

const C = () => {
  const v = \\"red\\";
  return <>
      <div css={
    /*__THEME_NEED__*/
    __macro_generated_ref_1}>
      </div>
      
      <div css={
    /*__THEME_NEED__*/
    __macro_generated_ref_0(v)}>
      </div>
    </>;
};  
  "
`;

exports[`@querycap-ui/core/macro nests 1`] = `
"

import { flow } from \\"lodash\\"
import { select, roundedEm, theme, animated, cover } from \\"@querycap-ui/core/macro\\"

const C = () => {
  const v = \\"red\\"

  return (
    <>
      <div css={select()
      .border(flow(theme.state.borderColor, (color) => \`2px solid \${color}\`))
      .padding(roundedEm(0.2))
      .display(\\"flex\\")
      .color(v)
      .with(select(\\"& > h2\\").color(\\"red\\"))
      .with(cover)
      .with({
        fontSize: 1,
      })
      .with(v && select().color(theme.state.color))
      .with(v || select().color(theme.state.color))
      .with(v ? undefined: select(\\"& > a\\").color(theme.state.color))}></div>
    </>
  )
}

const Animated = animated(C);

    
 ↓ ↓ ↓ ↓ ↓ ↓

import { cover as _cover } from \\"@querycap-ui/core\\";
import { animated as _animated } from \\"@querycap-ui/core\\";
import { theme as _theme } from \\"@querycap-ui/core\\";
import { roundedEm as _roundedEm } from \\"@querycap-ui/core\\";
import { selectKeys as _selectKeys } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
import { flow } from \\"lodash\\";

var __macro_generated_ref_0 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  [_selectKeys(\\"& > a\\")]: {
    color: _fromTheme(_theme.state.color)(__macro_generated_t)
  }
});

var __macro_generated_ref_1 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  color: _fromTheme(_theme.state.color)(__macro_generated_t)
});

var __macro_generated_ref_2 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  color: _fromTheme(_theme.state.color)(__macro_generated_t)
});

var __macro_generated_ref_3 = {
  name: \\"tokvmb\\",
  styles: \\"color:red;\\"
};
var __macro_generated_ref_4 = {
  [_selectKeys(\\"& > h2\\")]: __macro_generated_ref_3
};
var __macro_generated_ref_5 = {
  name: \\"k008qs\\",
  styles: \\"display:flex;\\"
};

var __macro_generated_ref_6 = v =>
/*__THEME_NEED__*/
__macro_generated_t => [__macro_generated_ref_5, {
  border: _fromTheme(flow(_theme.state.borderColor, color => \`2px solid \${color}\`))(__macro_generated_t),
  padding: _fromTheme(_roundedEm(0.2))(__macro_generated_t),
  color: _fromTheme(v)(__macro_generated_t)
}, _fromTheme(__macro_generated_ref_4)(__macro_generated_t), _fromTheme(_cover)(__macro_generated_t), {
  fontSize: 1
}, _fromTheme(
/*__THEME_NEED__*/
v &&
/*__THEME_NEED__*/
__macro_generated_ref_2)(__macro_generated_t), _fromTheme(
/*__THEME_NEED__*/
v ||
/*__THEME_NEED__*/
__macro_generated_ref_1)(__macro_generated_t), _fromTheme(
/*__THEME_NEED__*/
v ? undefined :
/*__THEME_NEED__*/
__macro_generated_ref_0)(__macro_generated_t)];

const C = () => {
  const v = \\"red\\";
  return <>
      <div css={
    /*__THEME_NEED__*/
    __macro_generated_ref_6(v)}></div>
    </>;
};

const Animated = _animated(C);  
  "
`;

exports[`@querycap-ui/core/macro select 1`] = `
"

import { select, OptionFocusedAttr } from \\"@querycap-ui/core/macro\\"

const v = \\"\\"

const C = () => {

  return (
    <>
      <div css={select()
      .with(select(\\"& > h1\\", \\"& > h2\\").color(\\"red\\").with(
        select(\`&[\${OptionFocusedAttr}=true]\`).color(\\"red\\")
      ))
      .with(select(v).color(\\"red\\"))
      .with(select().color(\\"red\\"))}></div>
    </>
  )
}

    
 ↓ ↓ ↓ ↓ ↓ ↓

import { OptionFocusedAttr as _OptionFocusedAttr } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
import { selectKeys as _selectKeys } from \\"@querycap-ui/core\\";
const v = \\"\\";
var __macro_generated_ref_0 = {
  name: \\"tokvmb\\",
  styles: \\"color:red;\\"
};
var __macro_generated_ref_1 = {
  name: \\"tokvmb\\",
  styles: \\"color:red;\\"
};
var __macro_generated_ref_2 = {
  [_selectKeys(v)]: __macro_generated_ref_1
};
var __macro_generated_ref_3 = {
  name: \\"tokvmb\\",
  styles: \\"color:red;\\"
};
var __macro_generated_ref_4 = {
  [_selectKeys(\`&[\${_OptionFocusedAttr}=true]\`)]: __macro_generated_ref_3
};
var __macro_generated_ref_5 = {
  name: \\"tokvmb\\",
  styles: \\"color:red;\\"
};

var __macro_generated_ref_6 =
/*__THEME_NEED__*/
__macro_generated_t => ({
  [_selectKeys(\\"& > h1\\", \\"& > h2\\")]: [__macro_generated_ref_5, _fromTheme(__macro_generated_ref_4)(__macro_generated_t)]
});

var __macro_generated_ref_7 =
/*__THEME_NEED__*/
__macro_generated_t => [_fromTheme(
/*__THEME_NEED__*/
__macro_generated_ref_6)(__macro_generated_t), _fromTheme(__macro_generated_ref_2)(__macro_generated_t), _fromTheme(__macro_generated_ref_0)(__macro_generated_t)];

const C = () => {
  return <>
      <div css={
    /*__THEME_NEED__*/
    __macro_generated_ref_7}></div>
    </>;
};  
  "
`;

exports[`@querycap-ui/core/macro simple 1`] = `
"

import { select, animated } from \\"@querycap-ui/core/macro\\"
import { css } from \\"@emotion/react\\";

const v = css({ color: \\"red\\" })

const C = () => {
  return (
    <>
      <animated.div css={select().flex(1)}></animated.div>
    </>
  )
}
    
 ↓ ↓ ↓ ↓ ↓ ↓

import { animated as _animated } from \\"@querycap-ui/core\\";

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return \\"You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop).\\"; }

import { css } from \\"@emotion/react\\";
const v = process.env.NODE_ENV === \\"production\\" ? {
  name: \\"hwfcu5\\",
  styles: \\"color:red\\"
} : {
  name: \\"1a9uk2c-v\\",
  styles: \\"color:red;label:v;\\",
  map: \\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSVUiLCJmaWxlIjoibS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgc2VsZWN0LCBhbmltYXRlZCB9IGZyb20gXCJAcXVlcnljYXAtdWkvY29yZS9tYWNyb1wiXG5pbXBvcnQgeyBjc3MgfSBmcm9tIFwiQGVtb3Rpb24vcmVhY3RcIjtcblxuY29uc3QgdiA9IGNzcyh7IGNvbG9yOiBcInJlZFwiIH0pXG5cbmNvbnN0IEMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxhbmltYXRlZC5kaXYgY3NzPXtzZWxlY3QoKS5mbGV4KDEpfT48L2FuaW1hdGVkLmRpdj5cbiAgICA8Lz5cbiAgKVxufSJdfQ== */\\",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
var __macro_generated_ref_0 = {
  name: \\"1rr4qq7\\",
  styles: \\"flex:1;\\"
};

const C = () => {
  return <>
      <_animated.div css={__macro_generated_ref_0}></_animated.div>
    </>;
};  
  "
`;

exports[`@querycap-ui/core/macro with variables 1`] = `
"

import { select, roundedEm } from \\"@querycap-ui/core/macro\\"

const C = () => {
  return (
    <>
      <div css={select().padding(roundedEm(0.2)).display(\\"flex\\")}></div>
    </>
  )
}
    
 ↓ ↓ ↓ ↓ ↓ ↓

import { roundedEm as _roundedEm } from \\"@querycap-ui/core\\";
import { fromTheme as _fromTheme } from \\"@querycap-ui/core\\";
var __macro_generated_ref_0 = {
  name: \\"k008qs\\",
  styles: \\"display:flex;\\"
};

var __macro_generated_ref_1 =
/*__THEME_NEED__*/
__macro_generated_t => [__macro_generated_ref_0, {
  padding: _fromTheme(_roundedEm(0.2))(__macro_generated_t)
}];

const C = () => {
  return <>
      <div css={
    /*__THEME_NEED__*/
    __macro_generated_ref_1}></div>
    </>;
};  
  "
`;
